status=error

appenders = outLogger, errLogger
rootLogger.level=debug
rootLogger.appenderRef.outLogger.ref = outLogger
rootLogger.appenderRef.outLogger.level = debug
rootLogger.appenderRef.errLogger.ref = errLogger
rootLogger.appenderRef.errLogger.level = error

#Define rolling file appender
appender.outLogger.type = RollingFile
appender.outLogger.name = outLogger
appender.outLogger.fileName=/opt/setup/logs/case_resolution/caseresolution-out.log
appender.outLogger.filePattern=/opt/setup/logs/case_resolution/caseresolution-out-%d{yyyy-MM-dd}.log.gz
appender.outLogger.layout.type = PatternLayout
appender.outLogger.layout.pattern = %d %-5p [%t] [(%c{3})] %m%n
appender.outLogger.policies.type = Policies

# Rotate log file each day
appender.outLogger.policies.time.type = TimeBasedTriggeringPolicy
appender.outLogger.policies.time.interval = 1
appender.outLogger.policies.time.modulate = true
appender.outLogger.strategy.type = DefaultRolloverStrategy
appender.outLogger.strategy.delete.type = Delete
appender.outLogger.strategy.delete.basePath = /opt/setup/logs/case_resolution/
appender.outLogger.strategy.delete.maxDepth = 1
appender.outLogger.strategy.delete.PathConditions.type=IfFileName
appender.outLogger.strategy.delete.PathConditions.glob=*.log.gz
appender.outLogger.strategy.delete.ifLastModified.type = IfLastModified
# Delete files older than 2 days
appender.outLogger.strategy.delete.ifLastModified.age = 1d

#Error log file details
appender.errLogger.type = RollingFile
appender.errLogger.name = errLogger
appender.errLogger.fileName=/opt/setup/logs/case_resolution/caseresolution-err.log
appender.errLogger.filePattern=/opt/setup/logs/case_resolution/caseresolution-err-%d{yyyy-MM-dd}.log.gz
appender.errLogger.layout.type = PatternLayout
appender.errLogger.layout.pattern = %d %-5p [%t] [(%c{3})] %m%n
appender.errLogger.policies.type = Policies

# Rotate log file each day
appender.errLogger.policies.time.type = TimeBasedTriggeringPolicy
appender.errLogger.policies.time.interval = 1
appender.errLogger.policies.time.modulate = true
appender.errLogger.strategy.type = DefaultRolloverStrategy
appender.errLogger.strategy.delete.type = Delete
appender.errLogger.strategy.delete.basePath =/opt/setup/logs/case_resolution/
appender.errLogger.strategy.delete.maxDepth = 1
appender.errLogger.strategy.delete.PathConditions.type=IfFileName
appender.errLogger.strategy.delete.PathConditions.glob=*.log.gz
appender.errLogger.strategy.delete.ifLastModified.type=IfLastModified
# Delete files older than 2 days
appender.errLogger.strategy.delete.ifLastModified.age = 1d

#Set different log levels for other libraries
loggers =  springframeworkLogger

logger.springframeworkLogger.name=org.springframework
logger.springframeworkLogger.level=ERROR
logger.springframeworkLogger.additivity = false

